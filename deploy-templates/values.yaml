global:
  disableRequestsLimits: false

image:
  name: business-process-administration-portal
  version: latest
port: 8080
service:
  type: ClusterIP
  port: 8080
replicas: 1
appConfigMountPath: "/app/config"
appSecretsMountPathBpmsDB: "/app/secrets/bpms-db"
appSecretsMountPathCamundaAdmin: "/app/secrets/camunda-admin"
appSecretsMountPathAdminKeycloakClient: "/app/secrets/admin-camunda-cockpit"
appSecretsMountPathOfficerKeycloakClient: "/app/secrets/officer-camunda-cockpit"
prometheusScrapePath: "/actuator/prometheus"
readinessPath: "/actuator/health/readiness"
livenessPath: "/actuator/health/liveness"

ingress: # expose the service with a route or an ingress depending on platform type
  platform: openshift # openshift or kubernetes

monitoring:
  namespace: openshift-monitoring

keycloak:
  client: camunda-cockpit
  adminRealm: 
    name: admin
  officerRealm: 
    name: officer-portal

javaOpts: "-Xms512m -Xmx512m"

deployProfile: prod

kafka:
  service: kafka-cluster-kafka-bootstrap:9093
  user: bpms-user
  clusterName: kafka-cluster
  sslEnabled: true
  sslCertType: PEM
  sslUserKey: ${KAFKA_USER_KEYSTORE_KEY}
  sslUserCertificate: ${KAFKA_USER_KEYSTORE_CERTIFICATE}
  sslClusterCertificate: ${KAFKA_CLUSTER_TRUSTSTORE}

camunda:
  bpm:
    historyLevel: AUDIT
    databaseHistoryLevel: ACTIVITY