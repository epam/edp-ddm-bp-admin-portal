<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.epam.digital.data.platform</groupId>
    <artifactId>low-code-platform-parent</artifactId>
    <version>1.6.0.4</version>
    <relativePath/>
  </parent>

  <artifactId>business-process-administration-portal</artifactId>
  <version>1.6.0</version>

  <name>business-process-administration-portal</name>
  <description>Admin application for BMPS</description>

  <properties>
    <camunda.bpm.identity.keycloak.plugin.verison>2.2.3
    </camunda.bpm.identity.keycloak.plugin.verison>

    <ddm-starter-logger.version>1.6.0.9</ddm-starter-logger.version>
    <ddm-starter-juel-function.version>1.6.0.3</ddm-starter-juel-function.version>
    <nimbusds.oauth2-oidc-sdk.version>9.18</nimbusds.oauth2-oidc-sdk.version>
    <log4j.version>2.17.0</log4j.version>
    <bpms.version>1.9.0-KRAKEN-DEV-SNAPSHOT</bpms.version>
    <spring-security-core.version>5.7.5</spring-security-core.version>
    <keycloak-core.version>15.1.1</keycloak-core.version>
    <sonar.coverage.exclusions>
      **/*.java
    </sonar.coverage.exclusions>

    <!-- This property is set by jacoco and used in the surefire config
			Set it to empty to avoid JVM startup error related to "@{argLine}" when run without jacoco -->
    <argLine/>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-core</artifactId>
        <version>${spring-security-core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.keycloak</groupId>
        <artifactId>keycloak-core</artifactId>
        <version>${keycloak-core.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>oauth2-oidc-sdk</artifactId>
      <version>${nimbusds.oauth2-oidc-sdk.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-identity-keycloak</artifactId>
      <version>${camunda.bpm.identity.keycloak.plugin.verison}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-client</artifactId>
    </dependency>

    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-bpm-history-event-handler</artifactId>
      <version>${bpms.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.epam.digital.data.platform</groupId>
          <artifactId>ddm-starter-trembita-integration</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-bpm-metrics-plugin</artifactId>
      <version>${bpms.version}</version>
    </dependency>

    <!--Spring Boot dependencies-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-kubernetes-client-config</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-starter-logger</artifactId>
      <version>${ddm-starter-logger.version}</version>
    </dependency>
    <dependency>
      <groupId>com.epam.digital.data.platform</groupId>
      <artifactId>ddm-starter-juel-function</artifactId>
      <version>${ddm-starter-juel-function.version}</version>
    </dependency>

    <!--Camunda dependencies-->
    <dependency>
      <groupId>org.camunda.bpm.springboot</groupId>
      <artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- This maven profile will use spring local profile for test running.
      For running test from IDE it's needed to add `-Dspring.profiles.active=local`
      for test explicitly -->
      <id>local</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.22.2</version>
            <configuration>
              <argLine>@{argLine} -Dspring.profiles.active=local</argLine>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.22.2</version>
            <configuration>
              <argLine>@{argLine} -Dspring.profiles.active=local</argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
