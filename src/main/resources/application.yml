server:
  port: 8080

camunda:
  bpm:
    authorization:
      enabled: true
    generic-properties:
      properties:
        userResourceWhitelistPattern: '[a-zA-Z0-9-_@\.]+|camunda-admin'
    job-execution:
      enabled: false

spring.autoconfigure.exclude: com.epam.digital.data.platform.starter.security.PlatformSecurityAutoConfiguration,com.epam.digital.data.platform.starter.security.PermitAllSecurityAutoConfiguration

spring:
  sleuth:
    enabled: false
  application:
    name: business-process-administration-portal
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: ${keycloakClientId}
            client-secret: ${admin-realm.client-secret}
            authorization-grant-type: authorization_code
            scope: openid, profile, email
        provider:
          keycloak:
            issuer-uri: ${keycloakAdminUrl}
            authorization-uri: ${keycloakAdminUrl}/protocol/openid-connect/auth
            user-info-uri: ${keycloakAdminUrl}/protocol/openid-connect/userinfo
            token-uri: ${keycloakAdminUrl}/protocol/openid-connect/token
            jwk-set-uri: ${keycloakAdminUrl}/protocol/openid-connect/certs
            user-name-attribute: preferred_username
            logout-url: ${keycloakAdminUrl}/protocol/openid-connect/logout
  cloud:
    discovery:
      client:
        health-indicator:
          enabled: false

# Camunda Keycloak Identity Provider Plugin
plugin.identity.keycloak:
  keycloak-issuer-url: ${keycloakAdminUrl}
  keycloak-admin-url: ${keycloakcCamundaPluginAdminUrl}
  client-secret: ${admin-realm.client-secret}
  client-id: ${keycloakClientId}
  use-email-as-camunda-user-id: true
  use-username-as-camunda-user-id: false
  use-group-path-as-camunda-group-id: true
  administrator-user-name: camunda
  administrator-group-name: camunda-admin
  disable-s-s-l-certificate-validation: true

# Configuration => prometheus.yml:
#   scrape_configs:
#     metrics_path: '/actuator/prometheus'
management:
  endpoints:
    web:
      exposure:
        include: 'health'
  endpoint:
    health:
      enabled: true
      show-details: always
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState, db
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
    kafka:
      enabled: false
    kubernetes:
      enabled: false

platform:
  logging:
    aspect:
      enabled: false
    primary-url:
      enabled: true

logbook:
  info-logging:
    enabled: true
  strategy: without-body
  exclude:
    - /actuator/**
  obfuscate:
    headers:
      - x-access-token